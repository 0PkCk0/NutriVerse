Index: routes/auth.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const router = require('express').Router();\r\nconst User = require('../model/UserModel');\r\nconst bcrypt = require('bcryptjs');\r\nconst jwt = require('jsonwebtoken');\r\nconst verify = require('./verifyToken');\r\nconst  loginValidation = require('../routes/validation');\r\n\r\n//login\r\nrouter.post('/', async (req, res) => {\r\n    // Validate data before logging in\r\n    const { error } = loginValidation(req.body);\r\n    if (error) return res.status(400).send(error.details[0].message);\r\n\r\n    // Check if the email exists\r\n    const email = await User.findOne({ email: req.body.email });\r\n    if (!email) return res.status(400).send('Email not found');\r\n\r\n    // Check if the password is correct\r\n    const validPass = await bcrypt.compare(req.body.password, email.password);\r\n    if (!validPass) return res.status(400).send('Invalid password');\r\n\r\n    const token = jwt.sign({ _id: email._id }, process.env.TOKEN_SECRET);\r\n    res.status(200).header('auth-token', token).send(token);\r\n})\r\n\r\n//logout\r\nrouter.delete('/', verify, async (req, res) => {\r\n    if (req.body._id !== req.userId) return res.status(400).send('Invalid user');\r\n    res.clearCookie('auth-token');\r\n    return res.status(200).send('Logged out');\r\n})\r\n\r\nmodule.exports = router;\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/routes/auth.js b/routes/auth.js
--- a/routes/auth.js	(revision 4a70f73468ee27cbcdfb4f769bc65565d384e5e5)
+++ b/routes/auth.js	(date 1715870532301)
@@ -3,7 +3,7 @@
 const bcrypt = require('bcryptjs');
 const jwt = require('jsonwebtoken');
 const verify = require('./verifyToken');
-const  loginValidation = require('../routes/validation');
+const { loginValidation } = require('../routes/validation');
 
 //login
 router.post('/', async (req, res) => {
